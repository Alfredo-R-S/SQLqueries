3.5: Filtering Data

Write SQL queries to return lists of films that meet the following conditions.

Film title contains the word Uptown in any position
SELECT film_id, title, description 
FROM film 
WHERE title LIKE  '%Uptown%'

Film length is more than 120 minutes and rental rate is more than 2.99
SELECT film_ID, title, description, length, rental_rate
FROM film 
WHERE length > 120 AND rental_rate > 2.99
ORDER BY length ASC

Rental duration is between 3 and 7 days (where 3 and 7 arenâ€™t inclusive)
SELECT film_ID, title, description, rental_duration
FROM film 
WHERE rental_duration > 3 AND rental_duration <7
ORDER BY rental_duration ASC

Film replacement cost is less than 14.99
SELECT film_ID, title, description, replacement_cost
FROM film 
WHERE replacement_cost < 14.99
ORDER BY replacement_cost DESC

Film rating is either PG or G
SELECT film_ID, title, description, rating
FROM film 
WHERE rating = 'G' OR rating = 'PG'

The query you wrote in step 1e returned a list of movies with a film rating of either PG or G. 
The inventory team has asked for more information about this list: count of the movies, average rental rate, and maximum and minimum rental durations.
The customer team wants to see the fields you calculated in step 3 grouped by rating. The totals in your results table should look the same but broken down by the rating column. 

SELECT rating,
COUNT(film_id) AS count_of_movies,
ROUND(AVG(film_id),2) AS average_movie_rental,
MAX(rental_duration) AS maximum_rental_duration,
MIN(rental_duration) AS minimum_rental_duration
FROM film 
WHERE rating = 'G'
OR rating = 'PG'
GROUP BY rating
